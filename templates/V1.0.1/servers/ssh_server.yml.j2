{% for component in components %}{% if component.placement != 'OTHER' %}{% if component.placement != 'ROUTER' %}{% if component.user != '' %}
>> {{component.name}}/ssh.yml
#!/usr/bin/env ansible-playbook
---
- name: Determine index of server
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Set index I/II
      set_fact:
        host: "{{component.name + '-' + '{{ nr }}' }}"
      when: nr is defined

    - name: Set index II/II
      set_fact:
        host: "{{component.name}}"
      when: nr is not defined

- name: Update ssh keys for server '{{component.name}}'
  hosts: "{{ "{{ hostvars['localhost']['host'] }}" | safe }}"
  gather_facts: false
  tasks:
    - name: Update authorized keys file for server '{{component.name}}'
      authorized_key:
        user: '{{ component.user }}'
        key: "{{ '{{ item }}' }}"
        state: present
        exclusive: True
      become: yes
      with_file:
        - ../../../repository/authorized_keys
{% endif %}{% endif %}{% endif %}{% endfor %}`

//------------------------------------------------------------------------------

templates['Router (create)'] = `{% for component in components %}{% if component.placement == 'ROUTER' %}
----- {{component.name}} -----
#!/usr/bin/env ansible-playbook
---
- name: Create router {{component.name}}
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    ansible_python_interpreter: "{{ '{{ansible_playbook_python}}' }}"
  vars_files:
    - ../../environment.yml
  environment: "{{ '{{env_vars}}' }}"
  tasks:

  # ----- {{component.name}} router -----
  - name: Create router {{component.name}}
    os_router:
      state:          present
      name:           {{component.name}}
      validate_certs: no
      interface:
{% for interface in component.interfaces %}
      - subnet: {{interface.network}}_subnet
{% endfor %}


{% endif %}{% endfor %}
